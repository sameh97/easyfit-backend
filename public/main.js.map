{"version":3,"sources":["./src/app/services/products-service/products.service.ts","./src/app/components/machines-components/machines-table/machines-table-datasource.ts","./src/app/exceptions/not-found-error.ts","./src/app/shared/services/navigation-helper.service.ts","./src/app/common/core-util.ts","./src/environments/environment.ts","./src/app/common/consts.ts","./src/app/components/members-components/add-member/add-member.component.ts","./src/app/components/members-components/add-member/add-member.component.html","./src/app/components/machines-components/edit-machine/edit-machine.component.ts","./src/app/components/machines-components/edit-machine/edit-machine.component.html","./src/app/searchfilter.pipe.ts","./src/app/shared/util/socket-util.ts","./src/app/model/member.ts","./src/app/exceptions/bad-input-error.ts","./src/app/services/auth-guard.service.ts","./src/app/components/members-components/update-member/update-member.component.ts","./src/app/components/members-components/update-member/update-member.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/shared/shared.module.ts","./src/app/components/register-page/register-page.component.ts","./src/app/components/register-page/register-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/common/app-util.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/services/user-notifications.service.ts","./src/app/components/machines-components/create-machine/create-machine.component.ts","./src/app/components/machines-components/create-machine/create-machine.component.html","./src/app/services/authentication.service.ts","./src/app/components/members-components/members/members.component.ts","./src/app/components/members-components/members/members.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/services/web-socket.service.ts","./src/app/exceptions/access-denied-error.ts","./src/app/services/registration.service.ts","./src/app/components/machines-components/machines/machines.component.ts","./src/app/components/machines-components/machines/machines.component.html","./src/app/services/client-data.service.ts","./src/app/exceptions/index.ts","./src/app/components/machines-components/machines-table/machines-table.component.ts","./src/app/components/machines-components/machines-table/machines-table.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/services/members-service/members.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppConsts } from 'src/app/common/consts';\nimport { Product } from 'src/app/model/product';\nimport { AuthenticationService } from '../authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductsService {\n  private readonly url = `${AppConsts.BASE_URL}/api/products`;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthenticationService\n  ) {}\n\n  public getAll(): Observable<Product[]> {\n    const gymId = this.authService.getGymId();\n\n    return this.http.post<Product[]>(`${this.url}?gymId=${gymId}`, {\n      observe: 'response',\n    });\n  }\n}\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface MachinesTableItem {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst EXAMPLE_DATA: MachinesTableItem[] = [\r\n  {id: 1, name: 'Hydrogen'},\r\n  {id: 2, name: 'Helium'},\r\n  {id: 3, name: 'Lithium'},\r\n  {id: 4, name: 'Beryllium'},\r\n  {id: 5, name: 'Boron'},\r\n  {id: 6, name: 'Carbon'},\r\n  {id: 7, name: 'Nitrogen'},\r\n  {id: 8, name: 'Oxygen'},\r\n  {id: 9, name: 'Fluorine'},\r\n  {id: 10, name: 'Neon'},\r\n  {id: 11, name: 'Sodium'},\r\n  {id: 12, name: 'Magnesium'},\r\n  {id: 13, name: 'Aluminum'},\r\n  {id: 14, name: 'Silicon'},\r\n  {id: 15, name: 'Phosphorus'},\r\n  {id: 16, name: 'Sulfur'},\r\n  {id: 17, name: 'Chlorine'},\r\n  {id: 18, name: 'Argon'},\r\n  {id: 19, name: 'Potassium'},\r\n  {id: 20, name: 'Calcium'},\r\n];\r\n\r\n/**\r\n * Data source for the MachinesTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class MachinesTableDataSource extends DataSource<MachinesTableItem> {\r\n  data: MachinesTableItem[] = EXAMPLE_DATA;\r\n  paginator: MatPaginator | undefined;\r\n  sort: MatSort | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<MachinesTableItem[]> {\r\n    if (this.paginator && this.sort) {\r\n      // Combine everything that affects the rendered data into one update\r\n      // stream for the data-table to consume.\r\n      return merge(observableOf(this.data), this.paginator.page, this.sort.sortChange)\r\n        .pipe(map(() => {\r\n          return this.getPagedData(this.getSortedData([...this.data ]));\r\n        }));\r\n    } else {\r\n      throw Error('Please set the paginator and sort on the data source before connecting.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect(): void {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: MachinesTableItem[]): MachinesTableItem[] {\r\n    if (this.paginator) {\r\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n      return data.splice(startIndex, this.paginator.pageSize);\r\n    } else {\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: MachinesTableItem[]): MachinesTableItem[] {\r\n    if (!this.sort || !this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort?.direction === 'asc';\r\n      switch (this.sort?.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean): number {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","\r\nexport class NotFoundError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, NotFoundError.prototype);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from './../components/confirmation-dialog/confirmation-dialog.component';\r\nimport { ComponentType } from '@angular/cdk/portal';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NavigationHelperService {\r\n  constructor(public dialog: MatDialog) {}\r\n\r\n  public openYesNoDialogNoCallback(\r\n    message: string,\r\n    customWidthPX?: number\r\n  ): Observable<any> {\r\n    let width = '350px';\r\n\r\n    if (customWidthPX) {\r\n      width = `${customWidthPX}px`;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: width,\r\n      data: message,\r\n    });\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  openDialog(\r\n    dialog: ComponentType<{}>,\r\n    width?: string,\r\n    dialogData?: any,\r\n    isFullScreen?: boolean\r\n  ) {\r\n    let dialogWidth = '450px';\r\n    if (width) {\r\n      dialogWidth = width;\r\n    }\r\n\r\n    let dialogRef;\r\n    if (!!isFullScreen) {\r\n      dialogRef = this.dialog.open(dialog, {\r\n        maxWidth: '98vh',\r\n        maxHeight: '98vh',\r\n        height: '98%',\r\n        width: '98%',\r\n        data: dialogData,\r\n        panelClass: 'full-screen-modal',\r\n      });\r\n    } else {\r\n      dialogRef = this.dialog.open(dialog, {\r\n        width: dialogWidth,\r\n        data: dialogData,\r\n      });\r\n    }\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n\r\n  public isMobileMode(): boolean {\r\n    const mq: MediaQueryList = window.matchMedia('(max-width: 500px)');\r\n    if (mq.matches) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { AppUtil } from './../common/app-util';\r\nimport { AppConsts } from './../common/consts';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\nexport class CoreUtil {\r\n  public static createAuthorizationHeader(): HttpHeaders {\r\n    let headers = new HttpHeaders();\r\n    const authorizationToken: string = localStorage.getItem(\r\n      AppConsts.KEY_USER_TOKEN\r\n    );\r\n    headers = headers.set('Authorization', authorizationToken);\r\n    return headers;\r\n  }\r\n\r\n  public static removePrefix(str: string, prefix: string): string {\r\n    if (!AppUtil.hasValue(str)) {\r\n      return null;\r\n    }\r\n    if (!AppUtil.hasValue(prefix) || prefix === '') {\r\n      return str;\r\n    }\r\n    return str.replace(prefix, '');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class AppConsts {\r\n  public static BASE_URL = 'http://localhost:3000';\r\n  public static readonly KEY_USER_TOKEN = 'KEY_USER_TOKEN';\r\n  public static readonly STOMP_ENDPOINT = '/easyfit-websocket-endpoint';\r\n\r\n  public static readonly SESSION_EXPIRED_ERROR =\r\n    'Session expired please login again';\r\n}\r\n\r\nexport const ROUTE_NAMES = {\r\n  MY_QUIZ_LIST: {\r\n    name: 'my-quiz-list',\r\n    display: 'My Quiz List',\r\n  },\r\n  MY_ASSIGNED_QUIZ_LIST: {\r\n    name: 'my-assigned-quiz-list',\r\n    display: 'Assigned To Me',\r\n  },\r\n  PEOPLE_LIST: {\r\n    name: 'people',\r\n    display: 'People',\r\n  },\r\n  QUIZ_LIST: {\r\n    name: 'quiz-list',\r\n\r\n    display: 'Home',\r\n  },\r\n  LOGIN: {\r\n    name: 'login',\r\n    display: 'Login',\r\n  },\r\n  REGISTER: {\r\n    name: 'register',\r\n    display: 'Register',\r\n  },\r\n  PROFILE: {\r\n    name: `people/:id`,\r\n    display: 'Profile',\r\n  },\r\n  LOGOUT: {\r\n    name: `logout`,\r\n    display: 'Logout',\r\n  },\r\n};\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppUtil } from 'src/app/common/app-util';\r\nimport { Member } from 'src/app/model/member';\r\nimport { MembersService } from 'src/app/services/members-service/members.service';\r\n\r\n@Component({\r\n  selector: 'app-add-member',\r\n  templateUrl: './add-member.component.html',\r\n  styleUrls: ['./add-member.component.css'],\r\n})\r\nexport class AddMemberComponent implements OnInit, OnDestroy {\r\n  addMemberForm: FormGroup;\r\n  member: Member;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private membersService: MembersService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.member = new Member();\r\n    this.addMemberForm = this.formBuilder.group({\r\n      // TODO: make the validators more relevant:\r\n      firstName: ['', [Validators.required, Validators.minLength(3)]],\r\n      lastName: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      joinDate: ['', [Validators.required]],\r\n      endOfMembershipDate: ['', [Validators.required]],\r\n      phone: ['', [Validators.required, Validators.minLength(4)]],\r\n      address: ['', [Validators.required, Validators.minLength(3)]],\r\n      birthDay: ['', [Validators.required]],\r\n      imageURL: [''],\r\n    });\r\n  }\r\n\r\n  public create = (): Promise<void> => {\r\n    if (!AppUtil.hasValue(this.member)) {\r\n      AppUtil.showWarningMessage(\r\n        `cannot create member because there is a missing fields`\r\n      );\r\n      return;\r\n    }\r\n\r\n    // TODO: remove this link and isactive ... :\r\n    if (!AppUtil.hasValue(this.member.imageURL)) {\r\n      this.addImgUrl();\r\n    }\r\n\r\n    // TODO: make more validations\r\n\r\n    this.subscriptions.push(\r\n      this.membersService.create(this.member).subscribe()\r\n    );\r\n  };\r\n\r\n  ngOnDestroy(): void {\r\n    AppUtil.releaseSubscriptions(this.subscriptions);\r\n  }\r\n\r\n  //TODO: change with icon\r\n  private addImgUrl() {\r\n    this.member.imageURL =\r\n      'https://cdn4.iconfinder.com/data/icons/diversity-v2-0-volume-05/64/fitness-trainer-black-male-512.png';\r\n  }\r\n}\r\n","<div class=\"center\">\r\n  <h2 mat-dialog-title>Create Member </h2>\r\n</div>\r\n\r\n<div class=\"center\">\r\n\r\n  <form *ngIf=\"addMemberForm && member\" #theForm=\"ngForm\" [formGroup]=\"addMemberForm\">\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>first name</mat-label>\r\n        <input [(ngModel)]=\"member.firstName\" name=\"firstName\" formControlName=\"firstName\" matInput\r\n          placeholder=\"Placeholder\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>last name</mat-label>\r\n        <input [(ngModel)]=\"member.lastName\" name=\"lastName\" formControlName=\"lastName\" matInput\r\n          placeholder=\"Last Name\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Email</mat-label>\r\n        <input [(ngModel)]=\"member.email\" type=\"email\" name=\"email\" formControlName=\"email\" matInput\r\n          placeholder=\"Email\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>join Date</mat-label>\r\n        <input [(ngModel)]=\"member.joinDate\" type=\"date\" name=\"joinDate\" formControlName=\"joinDate\" matInput\r\n          placeholder=\"join time\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>End Date</mat-label>\r\n        <input [(ngModel)]=\"member.endOfMembershipDate\" type=\"date\" name=\"endOfMembershipDate\"\r\n          formControlName=\"endOfMembershipDate\" matInput placeholder=\"End Date\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Phone</mat-label>\r\n        <input [(ngModel)]=\"member.phone\" name=\"phone\" formControlName=\"phone\" matInput placeholder=\"Phone\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Address</mat-label>\r\n        <input [(ngModel)]=\"member.address\" type=\"text\" name=\"address\" formControlName=\"address\" matInput\r\n          placeholder=\"Address\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>BirthDay</mat-label>\r\n        <input [(ngModel)]=\"member.birthDay\" type=\"date\" name=\"birthDay\" formControlName=\"birthDay\" matInput\r\n          placeholder=\"BirthDay\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Image - <small>Optional</small></mat-label>\r\n        <input [(ngModel)]=\"member.imageURL\" type=\"text\" name=\"imageURL\" formControlName=\"imageURL\" matInput\r\n          placeholder=\"Image\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <button id=\"add-member-btn\" class=\"btn btn-primary btn-block\" [disabled]=\"!theForm.valid\" (click)=\"create()\">\r\n      Add member\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-machine',\r\n  templateUrl: './edit-machine.component.html',\r\n  styleUrls: ['./edit-machine.component.css'],\r\n})\r\nexport class EditMachineComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<p>edit-machine works!</p>\r\n","import { Member } from './../app/model/member';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Pipe({\n  name: 'searchfilter',\n})\nexport class SearchfilterPipe implements PipeTransform {\n  transform(members$: Observable<Member[]>, searchValue: string): Observable<Member[]> {\n    if (!members$ || !searchValue) {\n      return members$;\n    }\n\n    return members$.pipe(\n      map((members) =>\n        members.filter((member) =>\n          member.firstName\n            .toLocaleLowerCase()\n            .includes(searchValue.toLocaleLowerCase())\n        )\n      )\n    );\n  }\n}\n","import { ROUTE_NAMES } from './../../common/consts';\r\n// import { Quiz } from '../models/quiz';\r\n// import { AppNotificationMessage } from '../models/app-notification-message';\r\n\r\nexport enum SocketClientState {\r\n  ATTEMPTING,\r\n  CONNECTED,\r\n  ERROR,\r\n}\r\n\r\nexport interface StompMessage {\r\n  body: string;\r\n}\r\n\r\nexport function textHandler(message: StompMessage): string {\r\n  return message.body;\r\n}\r\n\r\nexport const SocketTopics = {\r\n  TOPIC_CLEAN_MACHINE: '/clean-machine',\r\n  TOPIC_MACHINE_SERVICE: '/machine-service',\r\n  TOPIC_MEMBER_EXPIRED: '/user-expired',\r\n};\r\n\r\n// export function createNotificationMessageText(\r\n//   notification: AppNotificationMessage\r\n// ): string {\r\n//   if (!notification) {\r\n//     return '';\r\n//   }\r\n\r\n//   if (\r\n//     notification.topic.toLowerCase() ===\r\n//     SocketTopics.TOPIC_QUIZ_ANSWERS_UPDATE.toLowerCase()\r\n//   ) {\r\n//     const quiz: Quiz = JSON.parse(notification.content);\r\n//     return `${notification.username} solved your quiz: ${quiz.title}`;\r\n//   }\r\n\r\n//   if (\r\n//     notification.topic.toLowerCase() ===\r\n//     SocketTopics.TOPIC_QUIZ_ASSIGNED_TO_USER.toLowerCase()\r\n//   ) {\r\n//     const quiz: Quiz = JSON.parse(notification.content);\r\n//     return `${notification.username} assigned a quiz to you. Quiz title: ${quiz.title}`;\r\n//   }\r\n\r\n//   return `You got a notification from user: ${notification.username}`;\r\n// }\r\n\r\n// export function createNotificationRouteUrl(\r\n//   notification: AppNotificationMessage\r\n// ): string {\r\n//   if (!notification) {\r\n//     return '';\r\n//   }\r\n\r\n//   if (\r\n//     notification.topic.toLowerCase() ===\r\n//     SocketTopics.TOPIC_QUIZ_ANSWERS_UPDATE.toLowerCase()\r\n//   ) {\r\n//     return ROUTE_NAMES.MY_QUIZ_LIST.name;\r\n//   }\r\n\r\n//   if (\r\n//     notification.topic.toLowerCase() ===\r\n//     SocketTopics.TOPIC_QUIZ_ASSIGNED_TO_USER.toLowerCase()\r\n//   ) {\r\n//     return ROUTE_NAMES.MY_ASSIGNED_QUIZ_LIST.name;\r\n//   }\r\n\r\n//   return '/';\r\n// }\r\n","export class Member {\r\n  public id: number;\r\n  public firstName: string;\r\n  public lastName: string;\r\n  public phone: string;\r\n  public birthDay: Date;\r\n  public email: string;\r\n  public address: string;\r\n  public isActive: boolean;\r\n  public joinDate: Date;\r\n  public endOfMembershipDate: Date;\r\n  public imageURL: string;\r\n  public gymId: number;\r\n}\r\n","\r\nexport class BadInputError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, BadInputError.prototype);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthenticationService, public router: Router) {}\n  \n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n        // remove console....\n      console.log(`from auth guard service `);\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppUtil } from 'src/app/common/app-util';\r\nimport { Member } from 'src/app/model/member';\r\nimport { MembersService } from 'src/app/services/members-service/members.service';\r\n\r\n@Component({\r\n  selector: 'app-update-member',\r\n  templateUrl: './update-member.component.html',\r\n  styleUrls: ['./update-member.component.css'],\r\n})\r\nexport class UpdateMemberComponent implements OnInit, OnDestroy {\r\n  updateMemberForm: FormGroup;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private membersService: MembersService,\r\n    @Inject(MAT_DIALOG_DATA) private member: Member\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm = (): void => {\r\n    this.updateMemberForm = this.formBuilder.group({\r\n      // TODO: make the validators more relevant:\r\n      firstName: [\r\n        this.member.firstName,\r\n        [Validators.required, Validators.minLength(3)],\r\n      ],\r\n      lastName: [this.member.lastName, [Validators.required]],\r\n      email: [this.member.email, [Validators.required, Validators.email]],\r\n      joinDate: [this.member.joinDate, [Validators.required]],\r\n      endOfMembershipDate: [\r\n        this.member.endOfMembershipDate,\r\n        [Validators.required],\r\n      ],\r\n      phone: [\r\n        this.member.phone,\r\n        [Validators.required, Validators.minLength(4)],\r\n      ],\r\n      address: [\r\n        this.member.address,\r\n        [Validators.required, Validators.minLength(3)],\r\n      ],\r\n      birthDay: [this.member.birthDay, [Validators.required]],\r\n      imageURL: [this.member.imageURL],\r\n    });\r\n  };\r\n\r\n  public update = (member: Member): Promise<void> => {\r\n    if (!AppUtil.hasValue(member)) {\r\n      AppUtil.showWarningMessage(\r\n        `cannot update member because there is a missing fields`\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.subscriptions.push(this.membersService.update(member).subscribe());\r\n  };\r\n\r\n  get form(): { [key: string]: AbstractControl } {\r\n    return this.updateMemberForm.controls;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    AppUtil.releaseSubscriptions(this.subscriptions);\r\n  }\r\n}\r\n","<div class=\"center\">\r\n  <h2 mat-dialog-title>Update Member </h2>\r\n</div>\r\n\r\n<div class=\"center\">\r\n\r\n  <form *ngIf=\"updateMemberForm\" #theForm=\"ngForm\" [formGroup]=\"updateMemberForm\" (ngSubmit)=\"update(theForm.value)\">\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>first name</mat-label>\r\n        <input name=\"firstName\" formControlName=\"firstName\" matInput placeholder=\"Placeholder\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>last name</mat-label>\r\n        <input name=\"lastName\" formControlName=\"lastName\" matInput placeholder=\"Last Name\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Email</mat-label>\r\n        <input type=\"email\" name=\"email\" formControlName=\"email\" matInput placeholder=\"Email\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>join Date</mat-label>\r\n        <input type=\"date\" name=\"joinDate\" formControlName=\"joinDate\" matInput placeholder=\"join time\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>End Date</mat-label>\r\n        <input type=\"date\" name=\"endOfMembershipDate\" formControlName=\"endOfMembershipDate\" matInput\r\n          placeholder=\"End Date\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Phone</mat-label>\r\n        <input name=\"phone\" formControlName=\"phone\" matInput placeholder=\"Phone\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Address</mat-label>\r\n        <input type=\"text\" name=\"address\" formControlName=\"address\" matInput placeholder=\"Address\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>BirthDay</mat-label>\r\n        <input type=\"date\" name=\"birthDay\" formControlName=\"birthDay\" matInput placeholder=\"BirthDay\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <p>\r\n      <mat-form-field appearance=\"standard\">\r\n        <mat-label>Image</mat-label>\r\n        <input type=\"text\" name=\"imageURL\" formControlName=\"imageURL\" matInput placeholder=\"Image\">\r\n        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n        <mat-hint>Hint</mat-hint>\r\n      </mat-form-field>\r\n    </p>\r\n\r\n    <button id=\"add-member-btn\" class=\"btn btn-primary btn-block\" [disabled]=\"!theForm.valid\">\r\n      Update </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/model/product';\nimport { ProductsService } from 'src/app/services/products-service/products.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n})\nexport class ProductsComponent implements OnInit {\n  constructor(private productsService: ProductsService) {}\n\n  ngOnInit(): void {\n    this.getAll();\n  }\n\n  public getAll = (): Observable<Product[]> => {\n    return this.productsService.getAll();\n  };\n}\n","<p>products works!</p>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmationDialogComponent } from './components/confirmation-dialog/confirmation-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n// MatSuffix\r\n\r\n@NgModule({\r\n  declarations: [ConfirmationDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { RegistrationService } from './../../services/registration.service';\nimport { AppUtil } from 'src/app/common/app-util';\nimport { User } from 'src/app/model/user';\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css'],\n})\nexport class RegisterPageComponent implements OnInit {\n  constructor(private registerService: RegistrationService) {}\n\n  ngOnInit(): void {}\n\n  public register(signUpForm: any) {\n    const user: User = {\n      firstName: signUpForm.firstName,\n      lastName: signUpForm.lastName,\n      password: signUpForm.password,\n      email: signUpForm.email,\n      address: signUpForm.address,\n      birthDay: signUpForm.birthDay,\n      phone: signUpForm.phone,\n    } as User;\n\n    this.registerService.register(user).subscribe(\n      (res) => {\n        console.log(res);\n      },\n      (err: Error) => {\n        console.log(JSON.stringify(err));\n        AppUtil.showError(err);\n      }\n    );\n  }\n}\n","  <!DOCTYPE html>\n  <html lang=\"en\">\n\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n  </head>\n\n  <body>\n    <div class=\"row\">\n      <div class=\"col-6 col-md-4\"></div>\n      <div class=\"col-6 col-md-4\"><br><br><br></div>\n      <div class=\"col-6 col-md-4\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6 col-md-4\"></div>\n      <div class=\"col-6 col-md-4\">\n        <form #registerForm=\"ngForm\" novalidate (ngSubmit)=\"register(registerForm.value)\">\n          <div class=\"form-row\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer01\">First name</label>\n              <input type=\"text\" class=\"form-control is-valid\" name=\"firstName\" id=\"validationServer01\"\n                placeholder=\"First name\" value=\"Mark\" required ngModel>\n              <div class=\"valid-feedback\">\n                Looks good!\n              </div>\n            </div>\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer02\">Last name</label>\n              <input type=\"text\" class=\"form-control is-valid\" name=\"lastName\" id=\"validationServer02\"\n                placeholder=\"Last name\" value=\"Otto\" required ngModel>\n              <div class=\"valid-feedback\">\n                Looks good!\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer02\">Passowrd</label>\n              <input type=\"password\" class=\"form-control is-valid\" name=\"password\" id=\"validationServer02\"\n                placeholder=\"Passowrd\" placeholder=\"enter your Passowrd\" required ngModel>\n              <div class=\"valid-feedback\">\n                Looks good!\n              </div>\n            </div>\n\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer02\">confirm Passowrd</label>\n              <input type=\"password\" class=\"form-control is-valid\" name=\"confirmPassowrd\" id=\"validationServer02\"\n                placeholder=\"confirm Passowrd\" placeholder=\"confirm Passowrd\" required ngModel>\n              <div class=\"valid-feedback\">\n                Looks good!\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"form-row\">\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer02\">Email</label>\n              <input type=\"text\" class=\"form-control is-valid\" name=\"email\" id=\"validationServer02\"\n                placeholder=\"enter your Email\" placeholder=\"enter your Email\" #email=\"ngModel\" required email ngModel>\n\n              <div *ngIf=\"email.valid\" class=\"valid-feedback\">\n                Looks good!</div>\n              <div *ngIf=\"email.invalid && (email?.dirty || email?.touched)\" class=\"alert alert-danger\">\n                email is not valid</div>\n            </div>\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer03\">Address</label>\n              <input type=\"text\" class=\"form-control is-invalid\" name=\"address\" id=\"validationServer03\"\n                placeholder=\"address\" required ngModel>\n              <div class=\"invalid-feedback\">\n                Please provide a valid city.\n              </div>\n            </div>\n\n          </div>\n          <!--  -->\n          <div class=\"form-row\">\n            <div class=\"col-md-5 mb-3\">\n              <label for=\"validationServer04\">Birth Day</label>\n              <input type=\"date\" class=\"form-control is-invalid\" name=\"birthDay\" id=\"validationServer04\"\n                placeholder=\"Birth Day\" required ngModel>\n              <div class=\"invalid-feedback\">\n                Please provide a valid state.\n              </div>\n            </div>\n            <div class=\"col-md-6 mb-3\">\n              <label for=\"validationServer03\">Phone</label>\n              <input type=\"text\" class=\"form-control is-invalid\" name=\"phone\" id=\"validationServer03\"\n                placeholder=\"enter phone number\" required ngModel>\n              <div class=\"invalid-feedback\">\n                Please provide a valid city.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input class=\"form-check-input is-invalid\" type=\"checkbox\" value=\"\" id=\"invalidCheck3\" required ngModel>\n              <label class=\"form-check-label\" for=\"invalidCheck3\">\n                Agree to terms and conditions\n              </label>\n              <div class=\"invalid-feedback\">\n                You must agree before submitting.\n              </div>\n            </div>\n          </div>\n          <button class=\"btn btn-primary\" name=\"submit\" type=\"submit\">Sign up</button>\n        </form>\n\n      </div>\n      <div class=\"col-6 col-md-4\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-6\"></div>\n      <div class=\"col-6\"></div>\n      <div class=\"col-6\"></div>\n    </div>\n\n\n\n\n  </body>\n\n  </html>\n","import { Component } from '@angular/core';\nimport { WebSocketService } from './services/web-socket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'easyfit';\n\n  constructor(private webSocketService: WebSocketService) {}\n}\n"," <router-outlet></router-outlet>\r\n\r\n","import { Observable, Subscription } from 'rxjs';\r\nimport { throwError } from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { BadInputError } from '../exceptions';\r\nimport { NotFoundError } from '../exceptions/not-found-error';\r\nimport { AccessDeniedError } from '../exceptions/access-denied-error';\r\nimport { AppConsts } from './consts';\r\nimport { User } from '../model/user';\r\n\r\nexport class AppUtil {\r\n  private static getHttpErrorMessage(errorResponse: HttpErrorResponse): string {\r\n    if (!errorResponse) {\r\n      return '';\r\n    }\r\n    if (errorResponse.error.message) {\r\n      return errorResponse.error.message;\r\n    }\r\n    return errorResponse.error;\r\n  }\r\n\r\n  public static handleError(\r\n    errorResponse: HttpErrorResponse\r\n  ): Observable<never> {\r\n    const bodyContent: string = AppUtil.getHttpErrorMessage(errorResponse);\r\n\r\n    if (errorResponse.status === 400) {\r\n      return throwError(new BadInputError(bodyContent));\r\n    }\r\n\r\n    if (errorResponse.status === 404) {\r\n      return throwError(new NotFoundError(bodyContent));\r\n    }\r\n\r\n    if (errorResponse.status === 403 || errorResponse.status === 401) {\r\n      return throwError(new AccessDeniedError(bodyContent));\r\n    }\r\n\r\n    return throwError(new Error(bodyContent));\r\n  }\r\n\r\n  public static showErrorMessage(message: string) {\r\n    alert(message);\r\n  }\r\n\r\n  public static showError(err: Error): void {\r\n    if (err instanceof AccessDeniedError) {\r\n      setTimeout(() => alert('Access denied!'), 1);\r\n      return;\r\n    }\r\n\r\n    if (err.message) {\r\n      setTimeout(() => alert(`${err.message}`), 1);\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => alert('Something went wrong...'), 1);\r\n  }\r\n\r\n  public static showWarningMessage(message: string) {\r\n    alert(message);\r\n  }\r\n\r\n  public static appTokenGetter() {\r\n    return localStorage.getItem(AppConsts.KEY_USER_TOKEN);\r\n  }\r\n\r\n  public static handleNullError(nullField: string) {\r\n    alert(`${nullField} cannot be null`);\r\n  }\r\n\r\n  public static releaseSubscriptions(subscriptions: Subscription[]) {\r\n    if (!subscriptions || subscriptions.length === 0) {\r\n      return;\r\n    }\r\n\r\n    for (const sub of subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public static getFullException(error: Error): string {\r\n    if (!error) {\r\n      return null;\r\n    }\r\n    return `${error.message}\\nStack: ${error.stack}`;\r\n  }\r\n\r\n  public static hasValue(obj: any): boolean {\r\n    if (typeof obj !== 'undefined' && obj !== null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public static removePassword(user: User): void {\r\n    if (!user || user.password === '' || user.password === null) {\r\n      return;\r\n    }\r\n    user.password = '';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AppUtil } from 'src/app/common/app-util';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  public login(user) {\n    this.authService.login(user).subscribe(\n      (res) => {\n        console.log(res);\n        this.authService.persistTokenFromResponse(res);\n        this.router.navigateByUrl('/home');\n      },\n      (err: Error) => {\n        console.log(JSON.stringify(err));\n        AppUtil.showError(err);\n      }\n    );\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Document</title>\n</head>\n\n<body>\n  <div class=\"row\">\n    <div class=\"col-6 col-md-4\"></div>\n    <div class=\"col-6 col-md-4\"><br><br><br><br><br></div>\n    <div class=\"col-6 col-md-4\"></div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 col-md-4\"></div>\n    <div class=\"login-form col-6 col-md-4\">\n      <blockquote class=\"text-center\">\n        <h1>LOG IN</h1>\n      </blockquote>\n      <form class=\"form\" #loginForm=\"ngForm\" novalidate (ngSubmit)=\"login(loginForm.value)\">\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Email address</label>\n          <input type=\"email\" class=\"form-control\" name=\"email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\" required email ngModel />\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"exampleInputPassword1\">Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"password\" id=\"exampleInputPassword1\" placeholder=\"Password\"\n            required minlength=\"3\" ngModel />\n        </div>\n\n        <div class=\"form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" name=\"check\" id=\"exampleCheck1\" ngModel />\n          <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n        </div>\n        <button type=\"submit\" name=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </form><br>\n    </div>\n    <div class=\"col-6 col-md-4\"></div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6\"></div>\n    <div class=\"col-6\"></div>\n    <div class=\"col-6\"></div>\n  </div>\n\n\n\n\n</body>\n\n</html>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css'],\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div mat-dialog-content>\n  {{message}}\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No</button>\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { MembersComponent } from './components/members-components/members/members.component';\r\nimport { SearchfilterPipe } from './searchfilter.pipe';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { AddMemberComponent } from './components/members-components/add-member/add-member.component';\r\nimport { UpdateMemberComponent } from './components/members-components/update-member/update-member.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MachinesComponent } from './components/machines-components/machines/machines.component';\r\nimport { CreateMachineComponent } from './components/machines-components/create-machine/create-machine.component';\r\nimport { EditMachineComponent } from './components/machines-components/edit-machine/edit-machine.component';\r\nimport { MachinesTableComponent } from './components/machines-components/machines-table/machines-table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomePageComponent, canActivate: [AuthGuard] },\r\n  { path: 'members', component: MembersComponent, canActivate: [AuthGuard] },\r\n  { path: 'machines', component: MachinesComponent, canActivate: [AuthGuard] },\r\n\r\n  \r\n  //TODO: make 404 page\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomePageComponent,\r\n    RegisterPageComponent,\r\n    NavBarComponent,\r\n    MembersComponent,\r\n    SearchfilterPipe,\r\n    ProductsComponent,\r\n    AddMemberComponent,\r\n    UpdateMemberComponent,\r\n    MachinesComponent,\r\n    CreateMachineComponent,\r\n    EditMachineComponent,\r\n    MachinesTableComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    RouterModule.forRoot(routes),\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n})\nexport class HomePageComponent implements OnInit {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  logout() {\n    this.authService.logout();\n  }\n\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event) {\n    if (this.authService.isAuthenticated()) {\n      //TODO: find a better way\n      event.preventDefault();\n      window.history.forward();\n    }\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<button (click)=\"logout()\">log out</button>\n","import { AppNotificationMessage } from '../model/app-notification-message';\nimport { AppUtil } from '../common/app-util';\nimport { CoreUtil } from '../common/core-util';\nimport { ClientDataService } from '../services/client-data.service';\nimport { User } from '../model/user';\nimport { AuthenticationService } from './authentication.service';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { map, catchError, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConsts } from '../common/consts';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserNotificationsService extends ClientDataService {\n  private currentUser: User;\n  private myNotificationsListSubject = new BehaviorSubject<\n    AppNotificationMessage[]\n  >([]);\n  private readonly URL_KEY_TARGET_USER = 'targetUserId';\n  private readonly URL_KEY_SEEN = 'seen';\n\n  constructor(\n    private authService: AuthenticationService,\n    public http: HttpClient\n  ) {\n    super(`${AppConsts.BASE_URL}/api/v1/notifications/`, http);\n    // this.initNotificationsForCurrentUser();\n  }\n\n  public initNotificationsForUser(userId: string): void {\n    this.resetMyNotifications();\n    if (!AppUtil.hasValue(userId)) {\n      return;\n    }\n    this.getNotificaitonsListForUser(userId)\n      .pipe(take(1))\n      .subscribe(\n        (notificationsList: AppNotificationMessage[]) => {\n          this.addToMyNotifications(notificationsList);\n        },\n        (err: Error) => {\n          AppUtil.showErrorMessage(`Cannot load notifications list`);\n          this.authService.logout();\n        }\n      );\n  }\n\n  public getNotificaitonsListForUser(\n    userId: string\n  ): Observable<AppNotificationMessage[]> {\n    const filterParamMap: Map<string, string> = new Map<string, string>([\n      [this.URL_KEY_TARGET_USER, userId],\n      [this.URL_KEY_SEEN, 'false'],\n    ]);\n\n    return super.getAllByParameter(filterParamMap, null, null).pipe(\n      map((notifications: any) => {\n        return notifications as AppNotificationMessage[];\n      })\n    );\n  }\n\n  public addToMyNotifications(\n    notificaitonsToAdd: AppNotificationMessage[]\n  ): void {\n    const currNotificationData: AppNotificationMessage[] = this\n      .myNotificationsListSubject.value;\n\n    for (const notificaiton of notificaitonsToAdd) {\n      const notificationFromMyList = currNotificationData.find(\n        (notification) => notification.id === notificaiton.id\n      );\n      if (!notificationFromMyList) {\n        currNotificationData.unshift(notificaiton);\n      }\n    }\n\n    this.myNotificationsListSubject.next(currNotificationData);\n  }\n\n  public removeFromMyNotifications(\n    notificaitonToRemove: AppNotificationMessage\n  ): void {\n    const currNotificationData: AppNotificationMessage[] = this\n      .myNotificationsListSubject.value;\n\n    const indexOfNotification: number = currNotificationData.findIndex(\n      (notification) => notification.id === notificaitonToRemove.id\n    );\n    if (indexOfNotification !== -1) {\n      currNotificationData.splice(indexOfNotification, 1);\n      this.myNotificationsListSubject.next(currNotificationData);\n    }\n  }\n\n  get myNotificationsList$(): Observable<AppNotificationMessage[]> {\n    return this.myNotificationsListSubject.asObservable();\n  }\n\n  get myNotificationsCount$(): Observable<number> {\n    return this.myNotificationsListSubject.asObservable().pipe(\n      map((notificationData: AppNotificationMessage[]) => {\n        if (!notificationData) {\n          return 0;\n        }\n        return notificationData.length;\n      })\n    );\n  }\n\n  public resetMyNotifications(): void {\n    this.myNotificationsListSubject.next([]);\n  }\n\n  public updateAllMyNotifications(\n    patchRequestObj: Partial<AppNotificationMessage>\n  ): Observable<any> {\n    if (!this.currentUser) {\n      throwError('Cannot update all notifications, please try again later');\n    }\n    patchRequestObj.targetUserIds = [this.currentUser.id];\n    const url = `${this.url}targetUser/${this.currentUser.id}`;\n    return this.http\n      .patch(url, patchRequestObj, {\n        headers: CoreUtil.createAuthorizationHeader(),\n        observe: 'response',\n      })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  private initNotificationsForCurrentUser(): void {\n    this.authService.currentUser$.subscribe(\n      (user: User) => {\n        this.currentUser = user;\n        this.initNotificationsForUser(\n          this.currentUser ? this.currentUser.id : null\n        );\n      },\n      (err: User) => {\n        AppUtil.showErrorMessage(AppConsts.SESSION_EXPIRED_ERROR);\n        this.authService.logout();\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-machine',\r\n  templateUrl: './create-machine.component.html',\r\n  styleUrls: ['./create-machine.component.css']\r\n})\r\nexport class CreateMachineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>create-machine works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { AppConsts } from '../common/consts';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Router } from '@angular/router';\r\nimport { catchError, distinct } from 'rxjs/operators';\r\nimport { AppUtil } from '../common/app-util';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  private url = `${AppConsts.BASE_URL}/api/login`;\r\n  private readonly jwtHelper = new JwtHelperService();\r\n  //TODO: check gym id type:\r\n  //private gymId: number;\r\n\r\n  private currentUserSubject: BehaviorSubject<User> = new BehaviorSubject<User>(\r\n    null\r\n  );\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  public isAuthenticated(): boolean {\r\n    const token = localStorage.getItem(AppConsts.KEY_USER_TOKEN);\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    const tokenExpired = this.jwtHelper.isTokenExpired(token);\r\n    return !tokenExpired;\r\n  }\r\n\r\n  public login(user: User): Observable<any> {\r\n    return this.http\r\n      .post<string>(this.url, user, { observe: 'response' })\r\n      .pipe(catchError(AppUtil.handleError));\r\n  }\r\n\r\n  get currentUser$(): Observable<User> {\r\n    return this.currentUserSubject.asObservable().pipe(distinct());\r\n  }\r\n\r\n  public persistTokenFromResponse(response: any): void {\r\n    if (!response[`status`] || response[`status`] !== 200) {\r\n      throw new Error('Response status should be 200');\r\n    }\r\n\r\n    if (!response[`headers`]) {\r\n      throw new Error('No headers found in response');\r\n    }\r\n\r\n    const headers = response[`headers`];\r\n\r\n    const authorizationValue: string = headers.get(`Authorization`);\r\n\r\n    if (!authorizationValue) {\r\n      throw new Error('Cannot find token inside headers');\r\n    }\r\n\r\n    window.localStorage.setItem(AppConsts.KEY_USER_TOKEN, authorizationValue);\r\n    const user = this.extractUserFromToken(authorizationValue);\r\n    this.currentUserSubject.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(AppConsts.KEY_USER_TOKEN);\r\n    this.currentUserSubject.next(null);\r\n    this.router.navigate(['/login'], { replaceUrl: true });\r\n  }\r\n\r\n  private extractUserFromToken(token: string): User {\r\n    if (!token) {\r\n      return null;\r\n    }\r\n    try {\r\n      const decodedToken = this.jwtHelper.decodeToken(token);\r\n\r\n      const user: User = { ...decodedToken.sub };\r\n\r\n      AppUtil.removePassword(user);\r\n\r\n      return user;\r\n    } catch (ex) {\r\n      console.error('Saved user token is currupted');\r\n      this.logout();\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getGymId(): number {\r\n    const token = localStorage.getItem(AppConsts.KEY_USER_TOKEN);\r\n\r\n    const decodedToken = this.jwtHelper.decodeToken(token);\r\n\r\n    const user: User = { ...decodedToken.sub };\r\n\r\n    const gymId = user.gymId;\r\n    return gymId;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AppUtil } from 'src/app/common/app-util';\r\nimport { Member } from 'src/app/model/member';\r\nimport { MembersService } from 'src/app/services/members-service/members.service';\r\nimport { NavigationHelperService } from 'src/app/shared/services/navigation-helper.service';\r\nimport { AddMemberComponent } from '../add-member/add-member.component';\r\nimport { UpdateMemberComponent } from '../update-member/update-member.component';\r\n\r\n@Component({\r\n  selector: 'app-members',\r\n  templateUrl: './members.component.html',\r\n  styleUrls: ['./members.component.css'],\r\n})\r\nexport class MembersComponent implements OnInit, OnDestroy {\r\n  public members$: Observable<Member[]>;\r\n  closeResult = '';\r\n  searchValue: string;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private membersSerive: MembersService,\r\n    private navigationService: NavigationHelperService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAll();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    AppUtil.releaseSubscriptions(this.subscriptions);\r\n  }\r\n\r\n  private getAll() {\r\n    this.members$ = this.membersSerive.getAll();\r\n  }\r\n\r\n  public getActiveDisplayString(member: Member): string {\r\n    if (!member) {\r\n      return '';\r\n    }\r\n    return member.isActive ? 'Active' : 'Not Active';\r\n  }\r\n\r\n  public delete = (id: number, member: Member) => {\r\n    const message = `Are you sure you want to delete the member with the following name:\r\n    ${member.firstName} ${member.lastName} ?`;\r\n\r\n    this.navigationService\r\n      .openYesNoDialogNoCallback(message, 500)\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.membersSerive\r\n            .delete(id)\r\n            .pipe(\r\n              tap((res) => {\r\n                this.getAll();\r\n              })\r\n            )\r\n            .subscribe(\r\n              (res) => {\r\n                console.log(res);\r\n              },\r\n              (err) => {\r\n                AppUtil.showError(err);\r\n              }\r\n            );\r\n        }\r\n      });\r\n  };\r\n\r\n  public openCreateMemberDialog() {\r\n    if (this.navigationService.isMobileMode()) {\r\n      this.subscriptions.push(\r\n        this.navigationService\r\n          .openDialog(AddMemberComponent, '100vw', null, true)\r\n          .subscribe()\r\n      );\r\n    } else {\r\n      this.subscriptions.push(\r\n        this.navigationService.openDialog(AddMemberComponent).subscribe()\r\n      );\r\n    }\r\n  }\r\n\r\n  public openUpdateMemberDialog(member: Member) {\r\n    if (this.navigationService.isMobileMode()) {\r\n      this.subscriptions.push(\r\n        this.navigationService\r\n          .openDialog(UpdateMemberComponent, '100vw', null, true)\r\n          .subscribe()\r\n      );\r\n    } else {\r\n      this.subscriptions.push(\r\n        this.navigationService.openDialog(UpdateMemberComponent, null, member, null).subscribe()\r\n      );\r\n    }\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<br>\r\n<div class=\"example-button-container\">\r\n  <button type=\"button\" (click)=\"openCreateMemberDialog()\" mat-mini-fab color=\"primary\"\r\n    aria-label=\"Example icon button with a plus one icon\">\r\n    <mat-icon>plus_one</mat-icon>\r\n  </button>\r\n</div>\r\n<br><br>\r\n<input style=\"width: 250px;\" class=\"form-control mr-sm-2\" [(ngModel)]=\"searchValue\" name=\"searchInMembers\" type=\"search\"\r\n  placeholder=\"Search\" aria-label=\"Search\">\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Image</th>\r\n      <th scope=\"col\">first name</th>\r\n      <th scope=\"col\">last name</th>\r\n      <th scope=\"col\">birthDay</th>\r\n      <th scope=\"col\">email</th>\r\n      <th scope=\"col\">address</th>\r\n      <th scope=\"col\">phone</th>\r\n      <th scope=\"col\">status</th>\r\n      <th scope=\"col\">Join date</th>\r\n      <th scope=\"col\">membership expiration date</th>\r\n      <th scope=\"col\">action</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n    <tr *ngFor=\"let member of members$ | searchfilter:searchValue | async \">\r\n      <td> </td>\r\n      <td><img style=\"height: 60px; width: 60px;\" src=\"{{member.imageURL }}\"></td>\r\n      <td>{{member.firstName }}</td>\r\n      <td>{{member.lastName }}</td>\r\n      <td>{{member.birthDay | date }}</td>\r\n      <td>{{member.email }}</td>\r\n      <td>{{member.address }}</td>\r\n      <td>{{member.phone }}</td>\r\n      <td [ngClass]=\"{'btn btn-success' : member.isActive,\r\n                      'btn btn-danger' : !member.isActive}\">{{getActiveDisplayString(member) }}</td>\r\n      <td>{{member.joinDate | date }}</td>\r\n      <td>{{member.endOfMembershipDate | date }}</td>\r\n      <td><button (click)=\"delete(member.id, member)\" type=\"button\" mat-raised-button color=\"warn\">Delete</button>\r\n        <button (click)=\"openUpdateMemberDialog(member)\" style=\"margin-left: 10px;\" mat-raised-button\r\n          color=\"primary\">Edit</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/home\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/members\">members</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/machines\">machines</a>\r\n      </li>\r\n\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n        </div>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n      </li>\r\n      \r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n","import { CoreUtil } from './../common/core-util';\nimport { AppUtil } from './../common/app-util';\nimport {\n  first,\n  filter,\n  switchMap,\n  map,\n  catchError,\n  take,\n} from 'rxjs/operators';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { User } from './../model/user';\nimport { BehaviorSubject, Observable, throwError, of, Subject } from 'rxjs';\nimport * as Stomp from 'stompjs';\n\nimport { SocketClientState, SocketTopics } from './../shared/util/socket-util';\nimport { AppConsts } from './../common/consts';\nimport { UserNotificationsService } from './user-notifications.service';\nimport { AppNotificationMessage } from '../model/app-notification-message';\n\n// import * as socketIO from 'socket.io-client';\nconst socketIO = require('socket.io-client');\nimport { R3ExpressionFactoryMetadata } from '@angular/compiler/src/render3/r3_factory';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WebSocketService implements OnDestroy {\n  private static readonly URL = `${AppConsts.BASE_URL}`;\n  private stompClient: Stomp.Client;\n  private socket;\n\n  private sockectState: BehaviorSubject<SocketClientState>;\n  private readonly RECONNECT_DELAY_SECS = 5;\n  private readonly stompTopicSubscriptionSubjects = new Map<\n    string,\n    Subject<any>\n  >();\n\n  constructor(private notificationService: UserNotificationsService) {\n    for (const topicKey of Object.keys(SocketTopics)) {\n      this.stompTopicSubscriptionSubjects.set(\n        SocketTopics[topicKey],\n        new Subject<AppNotificationMessage>()\n      );\n    }\n\n    this.sockectState = new BehaviorSubject<SocketClientState>(\n      SocketClientState.ATTEMPTING\n    );\n    this.initSocketConnection(WebSocketService.URL);\n    this.listenToAllTopics();\n  }\n\n  public send(message: AppNotificationMessage): void {\n    if (!AppUtil.hasValue(message.topic)) {\n      throw new Error('Cannot sent message because topic is not defined');\n    }\n    this.connectToSocket()\n      .pipe(first())\n      .subscribe((client) =>\n        client.send(\n          `/rquiz-socket${message.topic}`,\n          {},\n          JSON.stringify(message)\n        )\n      );\n  }\n\n  public onMessage(\n    topic: string,\n    messageHandler = this.jsonHandler,\n    ignoreErrors = true\n  ): Observable<AppNotificationMessage> {\n    const topicSubject: Subject<any> =\n      this.stompTopicSubscriptionSubjects.get(topic);\n    if (!topicSubject) {\n      console.error(`Cannot find subscription for topic ${topic}`);\n      return of(null);\n    }\n    return topicSubject.asObservable().pipe(\n      switchMap((message) => {\n        return of(message).pipe(\n          map((msg: string) => {\n            return messageHandler.call(this, msg);\n          }),\n          catchError((error) => {\n            if (ignoreErrors === true) {\n              return of(null);\n            }\n            return throwError(error);\n          })\n        );\n      })\n    );\n  }\n\n  private initSocketConnection(url: string): void {\n    this.socket = new socketIO(url);\n\n    this.socket.on('connect', () => this.socketConnectedCallback());\n\n    this.socket.on('connect_error', (error) => {\n      this.socketFailedToConnectCallback.call(this, error);\n    });\n\n    this.socket.on('event', (msg) => console.log(msg));\n  }\n\n  private listenToAllTopics(): void {\n    this.connectToSocket()\n      .pipe(first())\n      .subscribe((socket: any) => {\n        const stompTopicsIterator = this.stompTopicSubscriptionSubjects.keys();\n        let currTopic: string = stompTopicsIterator.next().value;\n\n        while (AppUtil.hasValue(currTopic)) {\n          const subscription: any = socket.on(\n            `${currTopic}`,\n            (message: AppNotificationMessage) => {\n              const topic: string = message.topic;\n              this.handleNotificationFromTopic(\n                message,\n                topic\n              );\n            }\n          );\n          currTopic = stompTopicsIterator.next().value;\n        }\n      });\n  }\n\n  private connectToSocket(): Observable<any> {\n    return this.sockectState\n      .pipe(filter((state) => state === SocketClientState.CONNECTED))\n      .pipe(\n        switchMap((state: SocketClientState) => {\n          return of(this.socket);\n        })\n      );\n  }\n\n  private socketConnectedCallback(): void {\n    this.sockectState.next(SocketClientState.CONNECTED);\n  }\n\n  ngOnDestroy(): void {\n    this.connectToSocket()\n      .pipe(first())\n      .subscribe((client: Stomp.Client) => client.disconnect(null));\n  }\n\n  private handleNotificationFromTopic(message: any, topic: string): void {\n    const topicSubject: Subject<any> =\n      this.stompTopicSubscriptionSubjects.get(topic);\n    if (AppUtil.hasValue(topicSubject)) {\n      topicSubject.next(message);\n    }\n  }\n\n  private jsonHandler(message: any): any {\n    if (!message) {\n      return null;\n    }\n\n    if (typeof message === 'string') {\n      return JSON.parse(message);\n    }\n\n    return message;\n  }\n\n  private socketFailedToConnectCallback(error: string | Stomp.Frame): void {\n    this.sockectState.next(SocketClientState.ERROR);\n    console.error('Unable to connect to STOMP endpoint, error:', error);\n    console.error(\n      `Trying to connect again in ${this.RECONNECT_DELAY_SECS} seconds`\n    );\n    setTimeout(() => {\n      this.initSocketConnection(WebSocketService.URL);\n    }, this.RECONNECT_DELAY_SECS * 1000);\n  }\n}\n","\r\nexport class AccessDeniedError extends Error {\r\n    constructor(message: string) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, AccessDeniedError.prototype);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs';\nimport { AppConsts } from '../common/consts';\nimport { catchError } from 'rxjs/operators';\nimport { AppUtil } from '../common/app-util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationService {\n  private url: string = `${AppConsts.BASE_URL}/api/register`;\n  constructor(private http: HttpClient) {}\n\n  public register(user: User): Observable<any> {\n    console.log(\n      `user from reg service ${user.firstName} ${JSON.stringify(user)}`\n    );\n    return this.http\n      .post<string>(this.url, user, { observe: 'response' })\n      .pipe(catchError(AppUtil.handleError));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppNotificationMessage } from 'src/app/model/app-notification-message';\r\nimport { MachineScheduledJob } from 'src/app/model/machine-scheduled-job';\r\nimport { WebSocketService } from 'src/app/services/web-socket.service';\r\nimport { SocketTopics } from 'src/app/shared/util/socket-util';\r\n\r\n@Component({\r\n  selector: 'app-machines',\r\n  templateUrl: './machines.component.html',\r\n  styleUrls: ['./machines.component.css'],\r\n})\r\nexport class MachinesComponent implements OnInit {\r\n  scheduledJob: MachineScheduledJob;\r\n\r\n  constructor(private webSocketService: WebSocketService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.webSocketService\r\n      .onMessage(SocketTopics.TOPIC_CLEAN_MACHINE)\r\n      .subscribe((job: AppNotificationMessage) => {\r\n        console.log(`Got the message from server: ${JSON.stringify(job)}`);\r\n        this.scheduledJob = job.content as MachineScheduledJob;\r\n      });\r\n  }\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<p>machines works!</p>\r\n<h3>{{scheduledJob}}</h3>\r\n\r\n<app-machines-table></app-machines-table>\r\n","import { CoreUtil } from './../common/core-util';\nimport { AppUtil } from './../common/app-util';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\n\nexport class ClientDataService {\n  constructor(public url: string, public http: HttpClient) {}\n  // TODO: take headers from interceptor\n  getAll() {\n    return this.http\n      .get(`${this.url}all`, { headers: CoreUtil.createAuthorizationHeader() })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  delete(id: string) {\n    return this.http\n      .delete(this.url + id, { headers: CoreUtil.createAuthorizationHeader() })\n      .pipe(map((response: string) => JSON.parse(response)))\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  create(resource) {\n    return this.http\n      .post(this.url, resource, {\n        headers: CoreUtil.createAuthorizationHeader(),\n      })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  update(id: string, resource: any) {\n    return this.http\n      .put(`${this.url}id`, resource, {\n        headers: CoreUtil.createAuthorizationHeader(),\n      })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  get(id: string) {\n    return this.http\n      .get(this.url + id, { headers: CoreUtil.createAuthorizationHeader() })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  getAllByParameter(\n    filterParamMap: Map<string, string>,\n    page: number,\n    size: number\n  ) {\n    let url = `${this.url}all`;\n    const hasFilterParameters: boolean =\n      filterParamMap && filterParamMap.size > 0;\n\n    if (hasFilterParameters) {\n      let firstIteration = true;\n\n      filterParamMap.forEach((value: string, key: string) => {\n        if (firstIteration) {\n          url += `?${key}=${value}`;\n          firstIteration = false;\n        } else {\n          url += `&${key}=${value}`;\n        }\n      });\n    }\n\n    if (page != null && typeof page !== undefined) {\n      if (hasFilterParameters) {\n        url += '&';\n      } else {\n        url += '?';\n      }\n\n      url += `page=${page}&size=${size}`;\n    }\n\n    return this.http\n      .get(url, { headers: CoreUtil.createAuthorizationHeader() })\n      .pipe(catchError(AppUtil.handleError));\n  }\n\n  getAllByCustomUrl(resourceUrl: string, page: number, size: number) {\n    resourceUrl = this.url + resourceUrl;\n    if (page != null && typeof page !== undefined) {\n      resourceUrl += `?page=${page}&size=${size}`;\n    }\n\n    return this.http\n      .get(resourceUrl, { headers: CoreUtil.createAuthorizationHeader() })\n      .pipe(catchError(AppUtil.handleError));\n  }\n}\n","export { BadInputError } from './bad-input-error';\r\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MachinesTableDataSource, MachinesTableItem } from './machines-table-datasource';\r\n\r\n@Component({\r\n  selector: 'app-machines-table',\r\n  templateUrl: './machines-table.component.html',\r\n  styleUrls: ['./machines-table.component.css']\r\n})\r\nexport class MachinesTableComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  @ViewChild(MatTable) table!: MatTable<MachinesTableItem>;\r\n  dataSource: MachinesTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n\r\n  constructor() {\r\n    this.dataSource = new MachinesTableDataSource();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator [length]=\"dataSource?.data?.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n    [pageSizeOptions]=\"[5, 10, 20]\">\r\n  </mat-paginator>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppConsts } from '../../common/consts';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from 'src/app/model/member';\r\nimport { AuthenticationService } from './../authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MembersService {\r\n  private readonly url = `${AppConsts.BASE_URL}/api/members`;\r\n  private readonly addUrl = `${AppConsts.BASE_URL}/api/add-member`;\r\n  private readonly deleteUrl = `${AppConsts.BASE_URL}/api/member`;\r\n  private readonly updateURL = `${AppConsts.BASE_URL}/api/update-member`;\r\n\r\n  private gymId: number;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthenticationService\r\n  ) {\r\n    //TODO: init gym id somewhere else:\r\n    this.gymId = this.authService.getGymId();\r\n  }\r\n\r\n  public create = (member: Member): Observable<any> => {\r\n    member.gymId = this.gymId;\r\n\r\n    return this.http.post<Member>(`${this.addUrl}?gymId=${this.gymId}`, member);\r\n  };\r\n\r\n  public getAll = (): Observable<Member[]> => {\r\n    return this.http.post<Member[]>(`${this.url}?gymId=${this.gymId}`, {\r\n      observe: 'response',\r\n    });\r\n  };\r\n\r\n  public update = (member: Member): Observable<Member> => {\r\n    return this.http.put<Member>(this.updateURL, member);\r\n  };\r\n\r\n  public delete = (id: number): Observable<any> => {\r\n    return this.http.delete(`${this.deleteUrl}?id=${id}`);\r\n  };\r\n}\r\n"],"sourceRoot":"webpack:///"}